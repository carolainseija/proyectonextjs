{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/Usuario/Desktop/carolain Matea/platzi cursos/proyectonextjs/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Usuario/Desktop/carolain Matea/platzi cursos/proyectonextjs/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\carolain Matea\\\\platzi cursos\\\\proyectonextjs\\\\components\\\\ProductSummary\\\\AddToCart.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Input, Icon } from 'semantic-ui-react';\nimport { useCartMutations } from '@store/Cart';\n\n// Fake a server Response, we don't care on this project\n// about data persistency, but you may add it :)\nvar addToCartRequest = function addToCartRequest() {\n  return new Promise(function (resolve, reject) {\n    window.setTimeout(resolve, 600);\n  });\n};\n\nvar validate = function validate(quantity) {\n  var error = '';\n  if (quantity < 1) error = \"Can't be blank\";\n  return error;\n};\n\nvar AddToCart = function AddToCart(_ref) {\n  _s();\n\n  var product = _ref.product;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(''),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(1),\n      quantity = _useState3[0],\n      setQuantity = _useState3[1];\n\n  var _useState4 = useState(false),\n      visible = _useState4[0],\n      setVisible = _useState4[1];\n\n  var _useCartMutations = useCartMutations(),\n      addToCart = _useCartMutations.addToCart;\n\n  var toggleMessage = function toggleMessage() {\n    setTimeout(function () {\n      setVisible(false);\n    }, 1000);\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var error;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              error = validate(quantity);\n              setError(error);\n\n              if (!error) {\n                setLoading(true);\n                addToCartRequest().then(function () {\n                  addToCart(product, quantity);\n                  setLoading(false);\n                  setQuantity(quantity);\n                  setVisible(true);\n                  toggleMessage();\n                })[\"catch\"](function (err) {\n                  setError(\"Error: \".concat(err) || 'Something went wrong');\n                  setLoading(false);\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleChange = function handleChange(_ref3) {\n    var target = _ref3.target;\n    return setQuantity(parseInt(target.value, 10));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"number\",\n      placeholder: \"Quantity\",\n      value: quantity,\n      min: 1,\n      step: 1,\n      error: !!error,\n      onChange: handleChange,\n      action: {\n        color: 'green',\n        content: 'Add to Cart',\n        icon: 'plus cart',\n        onClick: handleSubmit,\n        loading: loading,\n        disabled: loading\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, _this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        position: 'absolute'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'green',\n        position: 'absolute'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        name: \"check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, _this), \"Added to cart\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(AddToCart, \"pMZeuVSdCWMHHnmI13dmU7w8lkk=\", false, function () {\n  return [useCartMutations];\n});\n\n_c = AddToCart;\nexport default AddToCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddToCart\");","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/carolain Matea/platzi cursos/proyectonextjs/components/ProductSummary/AddToCart.tsx"],"names":["React","useState","Input","Icon","useCartMutations","addToCartRequest","Promise","resolve","reject","window","setTimeout","validate","quantity","error","AddToCart","product","loading","setLoading","setError","setQuantity","visible","setVisible","addToCart","toggleMessage","handleSubmit","then","err","handleChange","target","parseInt","value","color","content","icon","onClick","disabled","position"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA4C,OAA5C;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAAwC,mBAAxC;AACA,SAASC,gBAAT,QAAiC,aAAjC;;AAMA;AACA;AACA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SACvB,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/BC,IAAAA,MAAM,CAACC,UAAP,CAAkBH,OAAlB,EAA2B,GAA3B;AACD,GAFD,CADuB;AAAA,CAAzB;;AAKA,IAAMI,QAAQ,GAAG,SAAXA,QAAW,CAACC,QAAD,EAAsB;AACrC,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAID,QAAQ,GAAG,CAAf,EAAkBC,KAAK,GAAG,gBAAR;AAElB,SAAOA,KAAP;AACD,CALD;;AAOA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAiC;AAAA;;AAAA,MAA9BC,OAA8B,QAA9BA,OAA8B;;AAAA,kBACnBd,QAAQ,CAAC,KAAD,CADW;AAAA,MAC1Ce,OAD0C;AAAA,MACjCC,UADiC;;AAAA,mBAEvBhB,QAAQ,CAAC,EAAD,CAFe;AAAA,MAE1CY,KAF0C;AAAA,MAEnCK,QAFmC;;AAAA,mBAGjBjB,QAAQ,CAAC,CAAD,CAHS;AAAA,MAG1CW,QAH0C;AAAA,MAGhCO,WAHgC;;AAAA,mBAInBlB,QAAQ,CAAC,KAAD,CAJW;AAAA,MAI1CmB,OAJ0C;AAAA,MAIjCC,UAJiC;;AAAA,0BAK3BjB,gBAAgB,EALW;AAAA,MAKzCkB,SALyC,qBAKzCA,SALyC;;AAOjD,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1Bb,IAAAA,UAAU,CAAC,YAAM;AACfW,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJD;;AAMA,MAAMG,YAAY;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACbX,cAAAA,KADa,GACLF,QAAQ,CAACC,QAAD,CADH;AAEnBM,cAAAA,QAAQ,CAACL,KAAD,CAAR;;AAEA,kBAAI,CAACA,KAAL,EAAY;AACVI,gBAAAA,UAAU,CAAC,IAAD,CAAV;AACAZ,gBAAAA,gBAAgB,GACboB,IADH,CACQ,YAAM;AACVH,kBAAAA,SAAS,CAACP,OAAD,EAAUH,QAAV,CAAT;AACAK,kBAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,kBAAAA,WAAW,CAACP,QAAD,CAAX;AACAS,kBAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,kBAAAA,aAAa;AACd,iBAPH,WAQS,UAACG,GAAD,EAAgB;AACrBR,kBAAAA,QAAQ,CAAC,iBAAUQ,GAAV,KAAmB,sBAApB,CAAR;AACAT,kBAAAA,UAAU,CAAC,KAAD,CAAV;AACD,iBAXH;AAYD;;AAlBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZO,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAqBA,MAAMG,YAAY,GAAG,SAAfA,YAAe;AAAA,QAAGC,MAAH,SAAGA,MAAH;AAAA,WACnBT,WAAW,CAACU,QAAQ,CAACD,MAAM,CAACE,KAAR,EAAe,EAAf,CAAT,CADQ;AAAA,GAArB;;AAGA,sBACE;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,WAAW,EAAC,UAFd;AAGE,MAAA,KAAK,EAAElB,QAHT;AAIE,MAAA,GAAG,EAAE,CAJP;AAKE,MAAA,IAAI,EAAE,CALR;AAME,MAAA,KAAK,EAAE,CAAC,CAACC,KANX;AAOE,MAAA,QAAQ,EAAEc,YAPZ;AAQE,MAAA,MAAM,EAAE;AACNI,QAAAA,KAAK,EAAE,OADD;AAENC,QAAAA,OAAO,EAAE,aAFH;AAGNC,QAAAA,IAAI,EAAE,WAHA;AAINC,QAAAA,OAAO,EAAEV,YAJH;AAKNR,QAAAA,OAAO,EAAPA,OALM;AAMNmB,QAAAA,QAAQ,EAAEnB;AANJ;AARV;AAAA;AAAA;AAAA;AAAA,aADF,EAkBGH,KAAK,iBACJ;AAAK,MAAA,KAAK,EAAE;AAAEkB,QAAAA,KAAK,EAAE,KAAT;AAAgBK,QAAAA,QAAQ,EAAE;AAA1B,OAAZ;AAAA,gBAAqDvB;AAArD;AAAA;AAAA;AAAA;AAAA,aAnBJ,eAsBI;AAAK,MAAA,KAAK,EAAE;AAAEkB,QAAAA,KAAK,EAAE,OAAT;AAAkBK,QAAAA,QAAQ,EAAE;AAA5B,OAAZ;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,eADF;AAAA;AAAA;AAAA;AAAA;AAAA,aAtBJ;AAAA,kBADF;AA8BD,CAnED;;GAAMtB,S;UAKkBV,gB;;;KALlBU,S;AAqEN,eAAeA,SAAf","sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport { Input, Icon, Transition } from 'semantic-ui-react'\r\nimport { useCartMutations } from '@store/Cart'\r\n\r\ntype AddToCartProps = {\r\n  product: TProduct\r\n}\r\n\r\n// Fake a server Response, we don't care on this project\r\n// about data persistency, but you may add it :)\r\nconst addToCartRequest = () =>\r\n  new Promise((resolve, reject) => {\r\n    window.setTimeout(resolve, 600)\r\n  })\r\n\r\nconst validate = (quantity: number) => {\r\n  let error = ''\r\n  if (quantity < 1) error = \"Can't be blank\"\r\n\r\n  return error\r\n}\r\n\r\nconst AddToCart = ({ product }: AddToCartProps) => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState('')\r\n  const [quantity, setQuantity] = useState(1)\r\n  const [visible, setVisible] = useState(false)\r\n  const { addToCart } = useCartMutations()\r\n\r\n  const toggleMessage = () => {\r\n    setTimeout(() => {\r\n      setVisible(false)\r\n    }, 1000)\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    const error = validate(quantity)\r\n    setError(error)\r\n\r\n    if (!error) {\r\n      setLoading(true)\r\n      addToCartRequest()\r\n        .then(() => {\r\n          addToCart(product, quantity)\r\n          setLoading(false)\r\n          setQuantity(quantity)\r\n          setVisible(true)\r\n          toggleMessage()\r\n        })\r\n        .catch((err: Error) => {\r\n          setError(`Error: ${err}` || 'Something went wrong')\r\n          setLoading(false)\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleChange = ({ target }: React.ChangeEvent<HTMLInputElement>) =>\r\n    setQuantity(parseInt(target.value, 10))\r\n\r\n  return (\r\n    <>\r\n      <Input\r\n        type=\"number\"\r\n        placeholder=\"Quantity\"\r\n        value={quantity}\r\n        min={1}\r\n        step={1}\r\n        error={!!error}\r\n        onChange={handleChange}\r\n        action={{\r\n          color: 'green',\r\n          content: 'Add to Cart',\r\n          icon: 'plus cart',\r\n          onClick: handleSubmit,\r\n          loading,\r\n          disabled: loading,\r\n        }}\r\n      />\r\n      {error && (\r\n        <div style={{ color: 'red', position: 'absolute' }}>{error}</div>\r\n      )}\r\n    \r\n        <div style={{ color: 'green', position: 'absolute' }}>\r\n          <Icon name=\"check\" />\r\n          Added to cart\r\n        </div>\r\n  \r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddToCart\r\n"]},"metadata":{},"sourceType":"module"}